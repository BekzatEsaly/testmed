const { Telegraf,
        Markup 
    } = require('telegraf');
const { message } = require('telegraf/filters');
require('dotenv').config();
const text = require('./const');

const bot = new Telegraf(process.env.BOT_TOKEN);
bot.start((ctx) => ctx.reply(`–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ ${ctx.message.from.first_name ? ctx.message.from.first_name : '“ö“±—Ä–º–µ—Ç—Ç—ñ –±–æ—Ç –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã'}`));
bot.help((ctx) => ctx.reply(text.commands));
/*bot.on(message('sticker'), (ctx) => ctx.reply('üëç'));
bot.hears('hi', (ctx) => ctx.reply('Hey there'));*/

bot.command('help', (ctx) => {
    ctx.replyWithHTML('<b>–ê–Ω—ã“õ—Ç–∞–º–∞ –∞–ª—É</b>', Markup.inlineKeyboard(
        [
            [Markup.button.callback('–ë—ñ—Ä—ñ–Ω—à—ñ...', 'btn_1')]
        ]
    ))
});

bot.command('firstaids', async (ctx) => {
    try {
    await ctx.replyWithHTML('<b>–¢–∞–ª–º–∞ –∫–µ–∑—ñ–Ω–¥–µ–≥—ñ –ê–õ“í–ê–®“ö–´ –¥”ô—Ä—ñ–≥–µ—Ä–≥–µ –¥–µ–π—ñ–Ω–≥—ñ –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã“õ –∫”©–º–µ–∫ —Ç”©–º–µ–Ω–¥–µ —Ä–µ—Ç-—Ä–µ—Ç—ñ–º–µ–Ω –∫”©—Ä—Å–µ—Ç—ñ–ª–≥–µ–Ω. –¢–æ–ª—ã“ì—ã—Ä–∞“õ —Ç–∞–Ω—ã—Å—É “Ø—à—ñ–Ω –±–∞—Ç—ã—Ä–º–∞–ª–∞—Ä–¥—ã –±–∞—Å—ã“£—ã–∑</b>', Markup.inlineKeyboard(
        [
            [Markup.button.callback('1. –ï–°–ö–ï–†–¢–£!!!', 'btn_1')], 
            [Markup.button.callback('2. –¢–µ–≥—ñ—Å –∂–µ—Ä–≥–µ –∂–∞—Ç“õ—ã–∑—É','btn_2')],
            [Markup.button.callback('3. –ë—ñ—Ä “õ—ã—Ä—ã–º–µ–Ω –∂–∞—Ç“õ—ã–∑—É', 'btn_3')], 
            [Markup.button.callback('4. –ë–∞—Å—ã–Ω–∞ –∂“±–º—Å–∞“õ –∑–∞—Ç “õ–æ—é','btn_4')],
            [Markup.button.callback('5. –ñ–µ–¥–µ–ª –∂”ô—Ä–¥–µ–º —à–∞“õ—ã—Ä—É','btn_5')]
        ]
    ))
    } catch(e) {
        console.error(e)
    }
});

function addAction(name, src,text){
    bot.action(name, async (ctx) => {
        try {
            await ctx.answerCbQuery()
            if(src !== false) {
                await ctx.replyWithPhoto({
                    source: src
                })
            }
            await ctx.replyWithHTML(text, {
                disable_web_page_preview: true
            })
        } catch (e) {
            console.error(e)
        }
    })
}

addAction('btn_1', './img/1.jpg',text.text1);
addAction('btn_2', './img/2.jpg',text.text2);
addAction('btn_3', './img/3.jpg',text.text3);
addAction('btn_4', './img/4.jpg',text.text4);
addAction('btn_5', './img/5.jpg',text.text5);

bot.launch();

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
